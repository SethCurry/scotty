// Code generated by ent, DO NOT EDIT.

package user

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDiscordID holds the string denoting the discord_id field in the database.
	FieldDiscordID = "discord_id"
	// FieldRankedScore holds the string denoting the ranked_score field in the database.
	FieldRankedScore = "ranked_score"
	// FieldFinalsID holds the string denoting the finals_id field in the database.
	FieldFinalsID = "finals_id"
	// Table holds the table name of the user in the database.
	Table = "users"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldDiscordID,
	FieldRankedScore,
	FieldFinalsID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultRankedScore holds the default value on creation for the "ranked_score" field.
	DefaultRankedScore int
)

// OrderOption defines the ordering options for the User queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByDiscordID orders the results by the discord_id field.
func ByDiscordID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDiscordID, opts...).ToFunc()
}

// ByRankedScore orders the results by the ranked_score field.
func ByRankedScore(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRankedScore, opts...).ToFunc()
}

// ByFinalsID orders the results by the finals_id field.
func ByFinalsID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFinalsID, opts...).ToFunc()
}
