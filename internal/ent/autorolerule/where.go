// Code generated by ent, DO NOT EDIT.

package autorolerule

import (
	"entgo.io/ent/dialect/sql"
	"github.com/SethCurry/scotty/internal/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldLTE(FieldID, id))
}

// RoleID applies equality check predicate on the "role_id" field. It's identical to RoleIDEQ.
func RoleID(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldEQ(FieldRoleID, v))
}

// RoleIDEQ applies the EQ predicate on the "role_id" field.
func RoleIDEQ(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldEQ(FieldRoleID, v))
}

// RoleIDNEQ applies the NEQ predicate on the "role_id" field.
func RoleIDNEQ(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldNEQ(FieldRoleID, v))
}

// RoleIDIn applies the In predicate on the "role_id" field.
func RoleIDIn(vs ...string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldIn(FieldRoleID, vs...))
}

// RoleIDNotIn applies the NotIn predicate on the "role_id" field.
func RoleIDNotIn(vs ...string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldNotIn(FieldRoleID, vs...))
}

// RoleIDGT applies the GT predicate on the "role_id" field.
func RoleIDGT(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldGT(FieldRoleID, v))
}

// RoleIDGTE applies the GTE predicate on the "role_id" field.
func RoleIDGTE(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldGTE(FieldRoleID, v))
}

// RoleIDLT applies the LT predicate on the "role_id" field.
func RoleIDLT(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldLT(FieldRoleID, v))
}

// RoleIDLTE applies the LTE predicate on the "role_id" field.
func RoleIDLTE(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldLTE(FieldRoleID, v))
}

// RoleIDContains applies the Contains predicate on the "role_id" field.
func RoleIDContains(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldContains(FieldRoleID, v))
}

// RoleIDHasPrefix applies the HasPrefix predicate on the "role_id" field.
func RoleIDHasPrefix(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldHasPrefix(FieldRoleID, v))
}

// RoleIDHasSuffix applies the HasSuffix predicate on the "role_id" field.
func RoleIDHasSuffix(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldHasSuffix(FieldRoleID, v))
}

// RoleIDEqualFold applies the EqualFold predicate on the "role_id" field.
func RoleIDEqualFold(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldEqualFold(FieldRoleID, v))
}

// RoleIDContainsFold applies the ContainsFold predicate on the "role_id" field.
func RoleIDContainsFold(v string) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.FieldContainsFold(FieldRoleID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AutoRoleRule) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AutoRoleRule) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AutoRoleRule) predicate.AutoRoleRule {
	return predicate.AutoRoleRule(sql.NotPredicates(p))
}
